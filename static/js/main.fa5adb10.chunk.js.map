{"version":3,"sources":["components/appbar.js","API/api.js","API/scotch.js","API/graph.js","components/topanime.js","components/search.js","App.js","index.js"],"names":["Appbar","history","useHistory","searchRef","createRef","useMediaQuery","isLargerThan","console","log","useState","value","setValue","className","ref","hasArrow","label","bg","Search2","color","marginTop","onClick","current","classList","toggle","size","padding","marginEnd","placeholder","border","borderRadius","onChange","event","target","textAlign","children","location","pathname","Input","replace","search","backgroundColor","fetchDetails","url","a","datast","axios","get","then","response","data","catch","error","gethtmldata","html","$","Cheerio","load","each","i","elem","push","imageUrl","find","attr","link","title","type","language","graph","webdata","og","array","TopAnime","isdata","setisdata","isloading","setisloading","topAnime","setTopAnime","topUpcoming","setUpcoming","isMobile","isTablet","isLap","isLargeLap","isXLargeLap","useEffect","style","thickness","speed","emptyColor","map","href","sizes","src","alt","String","substr","slice","image_url","height","width","base","sm","md","Search","searchData","setsearchData","IsLoading","setIsLoading","fetchData","fetch","method","json","results","length","App","exact","path","component","theme","extendTheme","colors","brand","100","900","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa5adb10.chunk.js","sourcesContent":["import {\r\n  Input,\r\n  InputGroup,\r\n  InputRightAddon,\r\n} from \"@chakra-ui/react\";\r\nimport { createRef, useState } from \"react\";\r\nimport './css/appbar.css'\r\nimport { useMediaQuery } from \"@chakra-ui/react\"\r\nimport { Search2Icon } from \"@chakra-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Tooltip } from \"@chakra-ui/react\"\r\n\r\n\r\nexport const Appbar = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const searchRef = createRef();\r\n  const onClick = () => {\r\n    const wrapper = searchRef.current;\r\n    wrapper.classList.toggle('divstyle-onclick');\r\n  }\r\n  const [isLargerThan] = useMediaQuery([\r\n    \"(max-width:700px)\",\r\n  ])\r\n\r\n  console.log(isLargerThan);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    console.log(value);\r\n  };\r\n\r\n  const redirectData = () => {\r\n    if (value !== '' && history.location.pathname !== `./search?${Input}`)\r\n      history.replace({\r\n        pathname: '/search',\r\n        search: value,\r\n      })\r\n\r\n  }\r\n\r\n  return <div className=\"divstyle\" ref={searchRef} >\r\n    <div className=\"row-item\">\r\n    <h1 className=\"main-header\">aniFLix</h1>\r\n      <Tooltip hasArrow label=\"Search anime\" bg=\"red.600\">\r\n        <Search2Icon color=\"white\" marginTop=\"2.7vh\" className=\"search-icon\" onClick={onClick} />\r\n      </Tooltip>\r\n\r\n    </div>\r\n\r\n\r\n    {/*<IconButton d={isLargerThan?\"block\":\"none\"}  aria-label=\"Search database\" marginY={1} icon={<HamburgerIcon />} />*/}\r\n    <InputGroup size=\"md\" padding=\"1\" marginEnd=\"5\" >\r\n      <Input placeholder=\"Search anime\" border=\"2px solid white\" color=\"white\" borderRadius=\"1rem\" value={value} onChange={handleChange} textAlign=\"left\" />\r\n      <InputRightAddon border=\"2px solid white\" borderRadius=\"1rem\" children={<Search2Icon />} onClick={redirectData} backgroundColor=\"#f53636\" color=\"white\" />\r\n    </InputGroup>\r\n\r\n  </div>\r\n}\r\n","import axios from \"axios\";\r\nexport const fetchDetails = async (url)=>{\r\n    \r\n        \r\n    let datast = [];\r\n\r\n   await axios.get(url)\r\n        .then(function (response) {\r\n            \r\n            datast = response.data[\"top\"];\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n        });\r\n        return datast;\r\n}\r\n\r\n\r\n\r\n","import Cheerio from \"cheerio\";\r\n\r\nexport const gethtmldata = html =>{\r\n    let data = [];\r\n    const $  = Cheerio.load(html);\r\n    $(\"div#recent-episodes-carousel div.card\").each((i,elem)=>{\r\n        data.push({\r\n            imageUrl: $(elem).find('img').attr(\"data-src\"),\r\n            link:`${$(elem).find('a').attr(\"href\")}`,\r\n            title:$(elem).find('h6').attr(\"title\"),\r\n            type:$(elem).find('small span:nth-child(1)').html(),\r\n            language:$(elem).find('small span:nth-child(2) span:nth-child(1)').html(),\r\n        })\r\n    });\r\n    return data;\r\n}\r\n\r\n","// const axios = require('axios')\r\n// const gethtmldata = require('./scotch');\r\n\r\nimport axios from \"axios\";\r\nimport { gethtmldata } from \"./scotch\";\r\nconst token = '4a2a4c1372879d38c40f98bf3d447273';\r\nexport const graph =  async () => {\r\n    const url  = \"https://ww1.animesimple.com/\";\r\n    const webdata = await axios.get(`https://api.scrapeup.com/?api_key=${token}&url=${url}`);\r\n    const og = webdata.data\r\n    const array = gethtmldata(og);\r\n    return array;\r\n}\r\n\r\n","import \"./css/latest.css\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport { fetchDetails } from \"../API/api\";\r\nimport { graph } from \"../API/graph\";\r\nimport { useMediaQuery } from \"@chakra-ui/react\";\r\n\r\nexport const TopAnime = () => {\r\n    const [isdata, setisdata] = useState([]);\r\n    const [isloading, setisloading] = useState(true);\r\n    const [topAnime, setTopAnime] = useState([]);\r\n    const [topUpcoming, setUpcoming] = useState([]);\r\n\r\n    const [isMobile, isTablet, isLap, isLargeLap, isXLargeLap] = useMediaQuery([\r\n        \"(min-width: 400px)\",\r\n        \"(min-width: 700px)\",\r\n        \"(min-width: 1080px)\",\r\n        \"(min-width: 1240px)\",\r\n        \"(min-width: 1444px)\",\r\n    ]);\r\n    console.log(isMobile, isTablet, isLap, isLargeLap, isXLargeLap)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        graph().then(data => {\r\n            setisloading(false);\r\n            setisdata(data);\r\n        });\r\n\r\n        fetchDetails(\"https://api.jikan.moe/v3/top/anime/1/airing\").then(data => {\r\n            setTopAnime(data);\r\n        });\r\n        fetchDetails(\"https://api.jikan.moe/v3/top/anime/1/upcoming\").then(data => {\r\n            setUpcoming(data);\r\n        })\r\n\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    return <div className=\"column-item\">\r\n        <h2 className=\"title\">Latest Episodes</h2>\r\n        <div className=\"episode-scroller\" style={{ padding: \"1.5rem\" }}>\r\n            {isloading ? <Spinner\r\n                thickness=\"4px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.200\"\r\n                color=\"blue.500\"\r\n                size=\"xl\"\r\n            /> : isdata.map(data => {\r\n                return <div className=\"card\">\r\n                    <a href={data.link}>\r\n                        <div className=\"card-image\">\r\n                            <figure className=\"image\">\r\n                                <img sizes=\"(max-width: 1087px) 416px, (max-width: 500px) 316px, 255px\" src={data.imageUrl} alt={data.title} />\r\n                            </figure>\r\n                        </div>\r\n                        <div className=\"card-content\" >\r\n                            <div className=\"episode-meta\">\r\n                                <span className=\"episode-title\">\r\n                                    {data.title}\r\n                                </span>\r\n                                <span className=\"episode-num\">{data.type}</span>\r\n                                <span className=\"episode-meta\">\r\n                                    <span className=\"\">\r\n                                        {String(data.language).substr(0, 3)}</span></span>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            })}\r\n\r\n        </div>\r\n        <div className=\"latest-anime-div\" style={{ marginTop: \"2rem\" }}>\r\n            <h1>Top airing</h1>\r\n            <div className=\"latest-anime-cards\">\r\n                {topAnime.slice(0, 20).map(data => {\r\n\r\n                    return <a href={data.url} target=\"_blank\" >\r\n                        <div className=\"latest-cards\">\r\n                            <figure>\r\n                                <img src={data.image_url} alt={data.title} />\r\n                                <figcaption style={{ height: \"8vh\" }} >{data.title.slice(0, 45)}</figcaption>\r\n                            </figure>\r\n                        </div>\r\n                    </a>\r\n                })}\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"latest-anime-div\" style={{ marginTop: \"3rem\" }} >\r\n            <h1>Top upcoming</h1>\r\n            <div className=\"latest-anime-cards\"  >\r\n                {topUpcoming.slice(0, 20).map(data => {\r\n                    return <a href={data.url} target=\"_blank\">\r\n                        <div className=\"latest-cards\">\r\n                            <figure style={{ width: `${{ base: \"100%\", sm: \"50%\", md: \"25%\" }}` }} >\r\n                                <img src={data.image_url} alt=\"\" />\r\n                                <figcaption style={{ height: \"8vh\" }} >{data.title.slice(0, 41)}</figcaption>\r\n                            </figure>\r\n                        </div>\r\n                    </a>\r\n                })}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import { Box,} from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport \"./css/search.css\"\r\nimport {useState,useEffect} from \"react\";\r\n\r\nimport { useHistory } from 'react-router';\r\nimport { Spinner } from '@chakra-ui/spinner';\r\n\r\nexport default function Search({search = \"\"}) {\r\n    const [searchData, setsearchData] = useState([]);\r\n    const [IsLoading, setIsLoading] = useState(true);\r\n    const history = useHistory();\r\n    \r\n    const fetchData = ()=>{\r\n        setIsLoading(true);\r\n        fetch(`https://api.jikan.moe/v3/search/anime?q=${history.location.search.slice(1)}=1`,{\r\n            method:'GET',\r\n        }).then(response=>response.json()).then(data =>{\r\n            setsearchData(data.results);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {            \r\n        fetchData();\r\n    }, [history.location.search.slice(1)])\r\n\r\n    useEffect(()=>{\r\n        fetchData();\r\n    },[])\r\n    return (\r\n        <Box className=\"search-body\">\r\n            <div className=\"search-div\" >\r\n\r\n                    { !IsLoading ? searchData.length !== 0 ?                    \r\n                    searchData.slice(0,15).map(data=>{\r\n                        return <a href={data.url}>\r\n                        <div className=\"search-cards\">\r\n                            <div className=\"image-div\">\r\n                                <img src={data.image_url} alt=\"\" />\r\n                                <div style={{ height: \"8vh\" }} >{data.title}</div>\r\n                            </div>\r\n                        </div>\r\n                    </a> \r\n                    }): <typography>\r\n                        Search for anime\r\n                    </typography> : <Spinner height=\"20\" width=\"20\" color=\"red\"  />\r\n                    }\r\n                 \r\n\r\n            </div>\r\n        </Box>\r\n\r\n\r\n    )\r\n}\r\n","import './App.css';\nimport { Appbar } from './components/appbar';\nimport { TopAnime } from './components/topanime';\nimport { HashRouter as Router,Route,Switch} from \"react-router-dom\";\nimport Search from './components/search';\nfunction App() {\n  return (\n    <Router>\n       <div className=\"App\">\n          <Appbar />\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={TopAnime} />\n          <Route exact path=\"/search\" component={Search} />\n        </Switch>\n    </Router>\n   \n  );\n}\n\nexport default App;\n","import { ChakraProvider ,extendTheme} from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nconst theme = extendTheme({\n  colors: {\n    brand: {\n      100: \"#f7fafc\",\n      // ...\n      900: \"#1a202c\",\n    },\n  },\n})\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ChakraProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}