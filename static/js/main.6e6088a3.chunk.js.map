{"version":3,"sources":["components/appbar.js","API/api.js","API/scotch.js","API/graph.js","components/topanime.js","components/search.js","App.js","index.js"],"names":["Appbar","searchRef","createRef","useMediaQuery","isLargerThan","console","log","useState","value","setValue","className","ref","onClick","current","classList","toggle","size","padding","marginEnd","placeholder","focusBorderColor","borderRadius","onChange","event","target","children","window","alert","style","cursor","fetchDetails","url","a","datast","axios","get","then","response","data","catch","error","gethtmldata","html","$","Cheerio","load","each","i","elem","push","imageUrl","find","attr","link","title","type","language","graph","webdata","og","array","TopAnime","isdata","setisdata","isloading","setisloading","topAnime","setTopAnime","topUpcoming","setUpcoming","isMobile","isTablet","isLap","isLargeLap","isXLargeLap","useEffect","thickness","speed","emptyColor","color","map","href","sizes","src","alt","String","substr","marginTop","slice","image_url","height","width","base","sm","md","Search","App","exact","path","component","theme","extendTheme","colors","brand","100","900","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e6088a3.chunk.js","sourcesContent":["import {\r\n  Input,\r\n  InputGroup,\r\n  InputRightAddon,\r\n\r\n} from \"@chakra-ui/react\";\r\nimport { createRef, useState } from \"react\";\r\nimport './css/appbar.css'\r\nimport { useMediaQuery } from \"@chakra-ui/react\"\r\n\r\n\r\n\r\n\r\nexport const Appbar = () => {\r\n\r\n  const searchRef = createRef();\r\n    const onClick = ()=>{\r\n      const wrapper = searchRef.current;\r\n      wrapper.classList.toggle('divstyle-onclick');\r\n    }\r\n  const [isLargerThan] = useMediaQuery([\r\n    \"(max-width:700px)\",\r\n  ])\r\n\r\n  console.log(isLargerThan);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    console.log(value);\r\n  };\r\n\r\n\r\n  return <div className=\"divstyle\" ref={searchRef}>\r\n    <h1 className=\"main-header\"  onClick={onClick} >aniFLix</h1>\r\n    {/*<IconButton d={isLargerThan?\"block\":\"none\"}  aria-label=\"Search database\" marginY={1} icon={<HamburgerIcon />} />*/}\r\n    <InputGroup size=\"sm\" padding=\"1\" marginEnd=\"5\" >\r\n      <Input placeholder=\"Search anime\"  focusBorderColor=\"red.200\" borderRadius=\"5px\" value={value} onChange={handleChange} />\r\n      <InputRightAddon  children=\"Search\" onClick={() => window.alert(\"hello\")} style={{ cursor: \"pointer\" }} />\r\n    </InputGroup>\r\n\r\n  </div>\r\n}\r\n","import axios from \"axios\";\r\nexport const fetchDetails = async (url)=>{\r\n    \r\n        \r\n    let datast = [];\r\n\r\n   await axios.get(url)\r\n        .then(function (response) {\r\n            datast = response.data[\"top\"];\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n        });\r\n        return datast;\r\n}\r\n\r\n\r\n\r\n","import Cheerio from \"cheerio\";\r\n\r\nexport const gethtmldata = html =>{\r\n    let data = [];\r\n    const $  = Cheerio.load(html);\r\n    $(\"div#recent-episodes-carousel div.card\").each((i,elem)=>{\r\n        data.push({\r\n            imageUrl: $(elem).find('img').attr(\"data-src\"),\r\n            link:`${$(elem).find('a').attr(\"href\")}`,\r\n            title:$(elem).find('h6').attr(\"title\"),\r\n            type:$(elem).find('small span:nth-child(1)').html(),\r\n            language:$(elem).find('small span:nth-child(2) span:nth-child(1)').html(),\r\n        })\r\n    });\r\n    return data;\r\n}\r\n\r\n","// const axios = require('axios')\r\n// const gethtmldata = require('./scotch');\r\n\r\nimport axios from \"axios\";\r\nimport { gethtmldata } from \"./scotch\";\r\nconst token = '4a2a4c1372879d38c40f98bf3d447273';\r\nexport const graph =  async () => {\r\n    const url  = \"https://ww1.animesimple.com/\";\r\n    const webdata = await axios.get(`https://api.scrapeup.com/?api_key=${token}&url=${url}`);\r\n    const og = webdata.data\r\n    const array = gethtmldata(og);\r\n    return array;\r\n}\r\n\r\n","import \"./css/latest.css\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport { fetchDetails } from \"../API/api\";\r\nimport { graph } from \"../API/graph\";\r\nimport { useMediaQuery } from \"@chakra-ui/react\";\r\n\r\nexport const TopAnime = () => {\r\n    const [isdata, setisdata] = useState([]);\r\n    const [isloading, setisloading] = useState(true);\r\n    const [topAnime, setTopAnime] = useState([]);\r\n    const [topUpcoming, setUpcoming] = useState([]);\r\n\r\n    const [isMobile, isTablet, isLap, isLargeLap, isXLargeLap] = useMediaQuery([\r\n        \"(min-width: 400px)\",\r\n        \"(min-width: 700px)\",\r\n        \"(min-width: 1080px)\",\r\n        \"(min-width: 1240px)\",\r\n        \"(min-width: 1444px)\",\r\n    ]);\r\n    console.log(isMobile, isTablet, isLap, isLargeLap, isXLargeLap)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        graph().then(data => {\r\n            setisloading(false);\r\n            setisdata(data);\r\n        });\r\n\r\n        fetchDetails(\"https://api.jikan.moe/v3/top/anime/1/airing\").then(data => {\r\n            setTopAnime(data);\r\n        });\r\n        fetchDetails(\"https://api.jikan.moe/v3/top/anime/1/upcoming\").then(data => {\r\n            setUpcoming(data);\r\n        })\r\n\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    return <div className=\"column-item\">\r\n        <h2 className=\"title\">Latest Episodes</h2>\r\n        <div className=\"episode-scroller\" style={{ padding: \"1.5rem\" }}>\r\n            {isloading ? <Spinner\r\n                thickness=\"4px\"\r\n                speed=\"0.65s\"\r\n                emptyColor=\"gray.200\"\r\n                color=\"blue.500\"\r\n                size=\"xl\"\r\n            /> : isdata.map(data => {\r\n                return <div className=\"card\">\r\n                    <a href={data.link}>\r\n                        <div className=\"card-image\">\r\n                            <figure className=\"image\">\r\n                                <img sizes=\"(max-width: 1087px) 416px, (max-width: 500px) 316px, 255px\" src={data.imageUrl} alt={data.title} />\r\n                            </figure>\r\n                        </div>\r\n                        <div className=\"card-content\" >\r\n                            <div className=\"episode-meta\">\r\n                                <span className=\"episode-title\">\r\n                                    {data.title}\r\n                                </span>\r\n                                <span className=\"episode-num\">{data.type}</span>\r\n                                <span className=\"episode-meta\">\r\n                                    <span className=\"\">\r\n                                        {String(data.language).substr(0, 3)}</span></span>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            })}\r\n\r\n        </div>\r\n        <div className=\"latest-anime-div\" style={{ marginTop: \"2rem\" }}>\r\n            <h1>Top airing</h1>\r\n            <div className=\"latest-anime-cards\">\r\n                {topAnime.slice(0, 20).map(data => {\r\n\r\n                    return <a href={data.url} target=\"_blank\" >\r\n                        <div className=\"latest-cards\">\r\n                            <figure>\r\n                                <img src={data.image_url} alt={data.title} />\r\n                                <figcaption style={{ height: \"8vh\" }} >{data.title.slice(0, 45)}</figcaption>\r\n                            </figure>\r\n                        </div>\r\n                    </a>\r\n                })}\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"latest-anime-div\" style={{ marginTop: \"3rem\" }} >\r\n            <h1>Top upcoming</h1>\r\n            <div className=\"latest-anime-cards\"  >\r\n                {topUpcoming.slice(0, 20).map(data => {\r\n                    return <a href={data.url} target=\"_blank\">\r\n                        <div className=\"latest-cards\">\r\n                            <figure style={{ width: `${{ base: \"100%\", sm: \"50%\", md: \"25%\" }}` }} >\r\n                                <img src={data.image_url} alt=\"\" />\r\n                                <figcaption style={{ height: \"8vh\" }} >{data.title.slice(0, 41)}</figcaption>\r\n                            </figure>\r\n                        </div>\r\n                    </a>\r\n                })}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import { Box } from '@chakra-ui/layout'\r\nimport React from 'react'\r\nimport \"./css/search.css\"\r\n\r\nexport default function Search() {\r\n    return (\r\n       <Box className=\"search-body\">\r\n           <h1> Search page</h1>\r\n       </Box>\r\n            \r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport { Appbar } from './components/appbar';\nimport { TopAnime } from './components/topanime';\nimport { HashRouter as Router,Route,Switch} from \"react-router-dom\";\nimport Search from './components/search';\nfunction App() {\n  return (\n    <Router>\n       <div className=\"App\">\n          <Appbar />\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={TopAnime} />\n          <Route exact path=\"/search\" component={Search} />\n        </Switch>\n    </Router>\n   \n  );\n}\n\nexport default App;\n","import { ChakraProvider ,extendTheme} from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nconst theme = extendTheme({\n  colors: {\n    brand: {\n      100: \"#f7fafc\",\n      // ...\n      900: \"#1a202c\",\n    },\n  },\n})\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ChakraProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}